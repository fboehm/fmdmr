---
title: "Creatinine & Cystatin C & CKD as possible consequences of FMD"
author: "Fred Boehm"
date: "`r lubridate::now()`"
format: gfm
---


```{r}
library(magrittr)
```

```{r}
#ieugwasr::api_status()
ao <- TwoSampleMR::available_outcomes()
cr_ind <- grepl("creatinine", ao$trait, ignore.case = TRUE) 
ki_ind <- grepl("kidney", ao$trait, ignore.case = TRUE) 
cc_ind <- grepl("cystatin", ao$trait, ignore.case = TRUE)
cyc_outcomes <- ao[cc_ind, ] %>%
    dplyr::filter(stringr::str_detect(string = trait, pattern = "Cystatin C") | stringr::str_detect(string = trait, pattern = "eGFRcys") | stringr::str_detect(string = trait, pattern = "Glomerular filtration rate"))
# get ckd outcomes
ckd_outcomes <- ao[ki_ind, ] %>%
    dplyr::filter(stringr::str_detect(string = trait, pattern = "Chronic"))
ckd_outcomes %>%
    knitr::kable() %>%
    knitr::knit_print()
cyc_outcomes %>%
    knitr::kable() %>%
    knitr::knit_print()
# creatinine
cre_outcomes <- ao[cr_ind, ] %>%
    dplyr::filter(!(stringr::str_detect(string = trait, pattern = "urine")) & !(stringr::str_detect(string = trait, pattern = "Urinary")))
cre_outcomes %>% 
    knitr::kable() %>%
    knitr::knit_print()
outcomes <- list(creatinine = cre_outcomes, cystatin = cyc_outcomes, ckd = ckd_outcomes)
```

```{r}
for (index in seq_along(outcomes)){
    tr_name <- names(outcomes)[index]
    outcomes[[index]] %>%
        vroom::vroom_write(here::here("analysis", "data", "mrcieu", paste0(tr_name, "_outcomes.tsv")), delim = "\t", col_names = FALSE)
}
```

```{r}
```


```{r, results = "asis"}
fmd_file <- here::here("analysis", "data", "fmd", "GCST90026612_buildGRCh37.tsv")
fmd <- TwoSampleMR::read_exposure_data(filename = fmd_file,
                                        sep = "\t",
                                        snp_col = "SNP",
                                        beta_col = "BETA",
                                        effect_allele_col = "EA",
                                        other_allele_col = "OA",
                                        eaf_col = "EAF",
                                        se_col = "SE",
                                        pval_col = "p_value",
                                        chr_col = "chromosome",
                                        pos_col = "base_pair_location",
                                        ncase_col = "N_cases",
                                        ncontrol_col = "N_ctrls"
                                        )

#fmd <- vroom::vroom(fmd_file) %>%
#    dplyr::mutate(chr_pos = paste0("chr", chromosome, ":", base_pair_location))
fmd_lead_snps_file <- here::here("analysis", "data", "fmd", "41467_2021_26174_MOESM4_ESM.xlsx") 

for (threshold in c(10 ^ -6, 10 ^ -5)){
    fmd_lead_snps <- readxl::read_xlsx(fmd_lead_snps_file, skip = 2) %>%
        dplyr::filter(`P-value` < threshold) 
    fmd_filt <- fmd %>%
        dplyr::filter(SNP %in% fmd_lead_snps$rsID)
    cat("## MR for ", threshold, " threshold\n")
    # loop over outcomes object
    for (i in seq_along(outcomes)){
        cat("### MR for ", names(outcomes)[i], " outcomes and ", threshold, "threshold \n")
        out <- outcomes[[i]]
        oo <- TwoSampleMR::extract_outcome_data(
            snps = fmd_filt$SNP,
            outcomes = out$id
        )
        dat <- TwoSampleMR::harmonise_data(exposure_dat = fmd_filt, outcome_dat = oo)
        res <- TwoSampleMR::mr(dat, method_list = c("mr_egger_regression", "mr_ivw")) 
        res %>%
            knitr::kable(caption = paste0("MR Egger and MR IVW for ", names(outcomes)[i])) %>%
            print()
        TwoSampleMR::mr_heterogeneity(dat) %>%
            knitr::kable(caption = paste0("Heterogeneity test for ", names(outcomes)[i])) %>%
            print()
        TwoSampleMR::mr_pleiotropy_test(dat) %>%
            knitr::kable(caption = paste0("Pleiotropy test for ", names(outcomes)[i])) %>%
            print()
        res_ss <- TwoSampleMR::mr_singlesnp(dat) 
        #res_ss %>%
        #    knitr::kable(caption = paste0("Single SNP analysis for ", names(outcomes)[i])) %>%
        #    print()
        loo <- TwoSampleMR::mr_leaveoneout(dat) 
        #loo %>%
        #    knitr::kable(caption = paste0("Leave one out analysis for ", names(outcomes)[i])) %>%
        #    print()
        cat("### Plots for ", names(outcomes)[i], " outcomes\n")
        pp <- TwoSampleMR::mr_scatter_plot(res, dat)
        for (index in seq_along(pp)){
            print(pp[[index]])
        }
#        p2 <- TwoSampleMR::mr_forest_plot(res_ss)
#        for (index in seq_along(p2)){
#            print(p2[[index]])
#        }
#        p3 <- TwoSampleMR::mr_leaveoneout_plot(loo)
#        for (index in seq_along(p3)){
#            print(p3[[index]])
#        }
#        p4 <- TwoSampleMR::mr_funnel_plot(res_ss)
#        for (index in seq_along(p4)){ 
#            print(p4[[index]])
#        }
    }
}
```







```{r, session_info}
sessioninfo::session_info()
# git commit info
gr <- git2r::repository(here::here()) %>%
    git2r::commits()
gr[[1]] 
```
